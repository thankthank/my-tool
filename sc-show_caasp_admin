#!/bin/bash
# This is CaaSP 4 Admin Commands
# If you want to put '(single quote), you need to put it with \(escape)
# e.g. \'

echo $'#### The guide start from Here ####

* skuba
** cluster status
skuba cluster status
** ssh-agent setting
eval "$(ssh-agent)"
ssh-add /home/sles/.ssh/id_rsa


* kubectl
** Monitor
kubectl -n kube-system get all
** Pod monitor
kubectl -n kube-system get pods -o wide
kubectl get pods --all-namespaces
** Node monitor
kubectl get nodes -o wide
** Service account monitor
kubectl get sa
** Service deletion
kubectl -n kube-system delete service tiller-deploy
** Deployment administration
kubectl create deployment nginx --image=nginx
kubectl -n kube-system get all
kubectl -n kube-system scale deployment.apps/tiller-deploy --replicas=0
kubectl -n kube-system delete deployment.apps/tiller-deploy
** Deployment Deletion
kubectl -n kube-system delete deployment tiller-deploy
** Cluster Application
kubectl -n kube-system apply -f <name>.yml
** Cluster info and dump
kubectl -n kube-system cluster-info
kubectl -n kube-system cluster-info dump
** List containers for each pod
kubectl get pods -o=jsonpath='{range .items[*]}{"\n"}{.metadata.name}{":\t"}{range .spec.containers[*]}{.image}{", "}{end}{end}' -n monitoring | sort
** Interacting with running Pods and Troubleshooting
** log with running pods
kubectl logs my-pod                                 # dump pod logs (stdout)
kubectl logs -l name=myLabel                        # dump pod logs, with label name=myLabel (stdout)
kubectl logs my-pod --previous                      # dump pod logs (stdout) for a previous instantiation of a container
kubectl logs my-pod -c my-container                 # dump pod container logs (stdout, multi-container case)
kubectl logs -l name=myLabel -c my-container        # dump pod logs, with label name=myLabel (stdout)
kubectl logs my-pod -c my-container --previous      # dump pod container logs (stdout, multi-container case) for a previous instantiation of a container
kubectl logs -f my-pod                              # stream pod logs (stdout)
kubectl logs -f my-pod -c my-container              # stream pod container logs (stdout, multi-container case)
kubectl logs -f -l name=myLabel --all-containers    # stream all pods logs with label name=myLabel (stdout)
kubectl run -i --tty busybox --image=busybox -- sh  # Run pod as interactive shell
kubectl run nginx --image=nginx --restart=Never -n 
mynamespace                                         # Run pod nginx in a specific namespace
kubectl run nginx --image=nginx --restart=Never     # Run pod nginx and write its spec into a file called pod.yaml
--dry-run -o yaml > pod.yaml
** attach to running pod
kubectl port-forward my-pod 5000:6000               # Listen on port 5000 on the local machine and forward to port 6000 on my-pod
kubectl -n monitoring exec -it <pod name> -c <container name> -- /bin/sh
** Get event
kubectl get events --all-namespaces
kubectl get events --sort-by=.metadata.creationTimestamp --all-namespaces

* helm
** get list
helm list
** Delete helm chart
helm delete <chart name>
helm del --purge <chart name>

* registry
** list images
curl --insecure https://caasp-lb.suse.su/v2/_catalog
** describe or inspect each images
skopeo inspect docker://caasp-lb.suse.su/caasp/v4/caasp-dex

#### The end of the guide ####'
